package core

import java.io._

object LivestreamerConfigFileWriter {
  
  private val DO_NOT_EDIT = "#CONFIG FILE GENERATED BY LIVESTREAMERFM, DO NOT EDIT"

  /**
   * Creates a new configuration file for Livestreamer
   * @param options = the options to write into the config file
   *
   * @return either nothing if the configuration file was successfully written, or a LivestreamerConfigFileWriterError
   *         if the path given by "options" was invalid
   */
  def writeNewConfigFile(options: LSConfigOptions): Option[LivestreamerConfigFileWriterError] = {
    try {
      val writer = new PrintWriter(new File(options.fileLocation + options.name))
      val playerOptions = s"player=${options.vlcLocation} -I http —---network-caching <${options.delay}> " +
        s"—-playandexit --no-sout-video --sout-audio --sout '#standard{access=http,mux=asf,vcodec=h264,acodec=mp4a," +
        s"dst=${options.ip}:${options.vlcPort}}'"
      writer.write(DO_NOT_EDIT + "\n")
      writer.write(playerOptions)
      writer.close
      None
    }
    catch {
      case e: FileNotFoundException => Some(BadConfigPath)
    }

  }

}
sealed trait LivestreamerConfigFileWriterError
case object BadConfigPath extends LivestreamerConfigFileWriterError